git init (можно добавить название папки ) 	- создание репозитория ;

git status 	- статус гита 

git add . 	- добавить фаилы в ГИТ

git add * 	- добавить все на ГИТ 

git commit -m " Komentarij k komitu " 		- добавить коммит 

git commit --amend  		- откроет окно правки последнего существующего коммита ( insert - режим коректировки названия комита, esc - выход из режима insert, :wq! - перезаписать коммит )

git clone (SSH or HTTPS link from github ) 	- клонирует файлы с проекта в ваш репоситорий на гитхабе

git push origin 	- перенести все изменения с локального проекта на GITHUB

git reset --hard head~2   (количество стираемых коммитов от раннего ) 		- уничтожает коммиты в указанном количестве от раннего

git reset --soft head~2   (количество слияемых коммитов от раннего ) 		- объеденяет коммиты в один ранний коммит(файлы сохраняются), в указанном количестве от раннего

git branch 	- показать брэнчи

git branch NewBranch 		- создать бренчь

git checkout NewBranch 		- перейти в указанный бренчь

git checkout ( enter commit number ) 9d89155908da16d1c09673d77487ab4608aacfc9		- перейти на указанный коммит

git checkout master		- перейти на самую последнюю версию

git branch -d NewBranch 	- удаление указанного бренча

git branch -D NewBranch 	- удаление указанного бренча в мастере

git checkout -b NewBranch 	- создание и перемещение в созданный бренчь

git merge NewBranch 	- соединение бренча с фиксом в мастер 
 
git log 	- выдать то что было сделанно 

git log -1  	- выдать то что было сделанно последним 

echo "Kakoito tekst" > kakoitofail.txt 		- создать файл с добавлением внутрь текста 



echo >> kakoitofail.txt 	- перенести файл

rm FileName 	- удалить файл 

dir 	- состав директории

mkdir Nazvanijedirektorii 	- создать директорию

rmdir FolderName 	- удалить директорию

cd Nazvanijedirektorii 		- войти в директорию

cd .. 		- возврат к предыдущей дериктории

cls 	- очистить командную строку

type fail.txt 	- проверка содержимого в файле







